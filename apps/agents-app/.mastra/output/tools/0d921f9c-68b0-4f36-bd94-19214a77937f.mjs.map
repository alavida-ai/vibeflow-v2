{"version":3,"file":"0d921f9c-68b0-4f36-bd94-19214a77937f.mjs","sources":["../../../src/mastra/tools/workflows/start-workflow.ts"],"sourcesContent":["import { createTool } from \"@mastra/core\";\nimport { z } from \"zod\";\nimport { startWorkflow, StartWorkflowResult, startWorkflowResultSchema } from \"@brand-listener/agent-sdk\";\nimport { setSession } from \"../../sessions\";\n\nexport const startWorkflowTool = createTool({\n  id: \"start-workflow\",\n  description: \"Start a workflow and return the first suspend payload (first task). Only one workflow can be active per session.\",\n  inputSchema: z.object({\n    workflowId: z.string()\n  }),\n  outputSchema: startWorkflowResultSchema,\n  execute: async ({ context, runtimeContext }, options) => {\n    // @ts-ignore\n    const mcpSid = options?.extra?.sessionId;       // provided by MCP over Hono SSE\n    console.log(\"appSid\", mcpSid)\n    \n    if (!mcpSid) {\n      throw new Error(\"Session ID is required but not provided. Make sure the MCP client is properly configured.\");\n    }\n    \n    try {\n      const { workflowId } = context;\n      \n      const result = await startWorkflow(workflowId);\n      runtimeContext.set(\"current-run-id\", result.runId);\n      runtimeContext.set(\"workflowId\", workflowId);\n      console.log(\"result and set runId and workflowId\", result);\n\n      if (!result.runId) {\n        throw new Error(\"No runId found from startWorkflow\");\n      }\n\n      const session = setSession(mcpSid, {\n        workflow: {\n          runId: result.runId,\n          workflowId: context.workflowId\n        }\n      })\n\n      console.log(\"set session\", session);\n      return result;\n    } catch (error) {\n      throw new Error(`Failed to start workflow: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n});"],"names":[],"mappings":";;;;;;AAKO,MAAM,oBAAoB,UAAA,CAAW;AAAA,EAC1C,EAAA,EAAI,gBAAA;AAAA,EACJ,WAAA,EAAa,kHAAA;AAAA,EACb,WAAA,EAAa,EAAE,MAAA,CAAO;AAAA,IACpB,UAAA,EAAY,EAAE,MAAA;AAAO,GACtB,CAAA;AAAA,EACD,YAAA,EAAc,yBAAA;AAAA,EACd,SAAS,OAAO,EAAE,OAAA,EAAS,cAAA,IAAkB,OAAA,KAAY;AAEvD,IAAA,MAAM,MAAA,GAAS,SAAS,KAAA,EAAO,SAAA;AAC/B,IAAA,OAAA,CAAQ,GAAA,CAAI,UAAU,MAAM,CAAA;AAE5B,IAAA,IAAI,CAAC,MAAA,EAAQ;AACX,MAAA,MAAM,IAAI,MAAM,2FAA2F,CAAA;AAAA,IAC7G;AAEA,IAAA,IAAI;AACF,MAAA,MAAM,EAAE,YAAW,GAAI,OAAA;AAEvB,MAAA,MAAM,MAAA,GAAS,MAAM,aAAA,CAAc,UAAU,CAAA;AAC7C,MAAA,cAAA,CAAe,GAAA,CAAI,gBAAA,EAAkB,MAAA,CAAO,KAAK,CAAA;AACjD,MAAA,cAAA,CAAe,GAAA,CAAI,cAAc,UAAU,CAAA;AAC3C,MAAA,OAAA,CAAQ,GAAA,CAAI,uCAAuC,MAAM,CAAA;AAEzD,MAAA,IAAI,CAAC,OAAO,KAAA,EAAO;AACjB,QAAA,MAAM,IAAI,MAAM,mCAAmC,CAAA;AAAA,MACrD;AAEA,MAAA,MAAM,OAAA,GAAU,WAAW,MAAA,EAAQ;AAAA,QACjC,QAAA,EAAU;AAAA,UACR,OAAO,MAAA,CAAO,KAAA;AAAA,UACd,YAAY,OAAA,CAAQ;AAAA;AACtB,OACD,CAAA;AAED,MAAA,OAAA,CAAQ,GAAA,CAAI,eAAe,OAAO,CAAA;AAClC,MAAA,OAAO,MAAA;AAAA,IACT,SAAS,KAAA,EAAO;AACd,MAAA,MAAM,IAAI,KAAA,CAAM,CAAA,0BAAA,EAA6B,KAAA,YAAiB,KAAA,GAAQ,MAAM,OAAA,GAAU,MAAA,CAAO,KAAK,CAAC,CAAA,CAAE,CAAA;AAAA,IACvG;AAAA,EACF;AACF,CAAC;;;;"}